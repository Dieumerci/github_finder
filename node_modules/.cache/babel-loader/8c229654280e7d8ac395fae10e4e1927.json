{"ast":null,"code":"var _jsxFileName = \"/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport Logo from '../images/elliot.png';\n\nfunction ProfileCard(props) {\n  const [name, setName] = useState('');\n  const [userName, setUserName] = useState('');\n  const [followers, setFollowers] = useState('');\n  const [avatar, setAvatar] = useState('');\n  const [userInput, setUserInput] = useState('');\n  const [error, setError] = useState('');\n  const [repos, setRepos] = useState('');\n  useEffect(() => {\n    fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n      headers: {\n        authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n      }\n    }).then(response => response.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n\n  const setData = ({\n    name,\n    userName,\n    followers,\n    avatar,\n    userInput,\n    error,\n    repos\n  }) => {\n    setName(name);\n    setAvatar(avatar);\n    setFollowers(followers);\n    setUserName(userName);\n    setUserInput(userInput);\n    setRepos(repos);\n    setError(error);\n  };\n\n  const extra = () => /*#__PURE__*/React.createElement(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    name: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }), followers);\n\n  return /*#__PURE__*/React.createElement(Card, {\n    image: avatar,\n    header: name,\n    meta: \"Friend\",\n    description: \"Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.\",\n    extra: extra(followers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default ProfileCard;","map":{"version":3,"sources":["/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js"],"names":["React","useState","useEffect","Card","Icon","Logo","ProfileCard","props","name","setName","userName","setUserName","followers","setFollowers","avatar","setAvatar","userInput","setUserInput","error","setError","repos","setRepos","fetch","headers","authorization","then","response","json","data","setData","extra"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAGA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACW,SAAD,EAAYC,YAAZ,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACmB,KAAD,EAAQC,QAAR,IAAoBpB,QAAQ,CAAC,EAAD,CAAlC;AAGAC,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,KAAK,CAAC,8DAAD,EAAiE;AAClEC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE;AADV;AADyD,KAAjE,CAAL,CAKKC,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,OAAO,GAAG,CAAC;AACbrB,IAAAA,IADa;AAEbE,IAAAA,QAFa;AAGbE,IAAAA,SAHa;AAIbE,IAAAA,MAJa;AAKbE,IAAAA,SALa;AAMbE,IAAAA,KANa;AAObE,IAAAA;AAPa,GAAD,KAQV;AACFX,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAO,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAD,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAD,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAO,IAAAA,YAAY,CAACD,SAAD,CAAZ;AACAK,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACH,GAhBD;;AAmBA,QAAMY,KAAK,GAAG,mBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEGlB,SAFH,CADJ;;AAOA,sBACI,oBAAC,IAAD;AACA,IAAA,KAAK,EAAEE,MADP;AAEA,IAAA,MAAM,EAAEN,IAFR;AAGA,IAAA,IAAI,EAAC,QAHL;AAIA,IAAA,WAAW,EAAC,oGAJZ;AAKA,IAAA,KAAK,EAAEsB,KAAK,CAAClB,SAAD,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASD;;AAEH,eAAeN,WAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Card, Icon,  } from 'semantic-ui-react'\nimport Logo from '../images/elliot.png';\n\n\nfunction ProfileCard(props) {\n\n    const [name, setName] = useState('');\n    const [userName, setUserName] = useState('');\n    const [followers, setFollowers] = useState('');\n    const [avatar, setAvatar] = useState('');\n    const [userInput, setUserInput] = useState('');\n    const [error, setError] = useState('');\n    const [repos, setRepos] = useState('');\n    \n\n    useEffect(() => {\n        fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n            headers: {\n                authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setData(data)\n            });\n    }, []);\n    \n    const setData = ({\n        name,\n        userName,\n        followers,\n        avatar,\n        userInput,\n        error,\n        repos,\n    }) => {\n        setName(name);\n        setAvatar(avatar);\n        setFollowers(followers);\n        setUserName(userName);\n        setUserInput(userInput);\n        setRepos(repos);\n        setError(error);\n    };\n    \n\n    const extra = () => (\n        <a>\n          <Icon name='user' />\n          {followers}\n        </a>\n    )\n    \n    return (\n        <Card\n        image={avatar}\n        header={name}\n        meta='Friend'\n        description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n        extra={extra(followers)}\n      />\n    )\n  }\n\nexport default ProfileCard\n"]},"metadata":{},"sourceType":"module"}