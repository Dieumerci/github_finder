{"ast":null,"code":"var _jsxFileName = \"/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport Logo from '../images/elliot.png';\nconst extra = /*#__PURE__*/React.createElement(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  name: \"user\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }\n}), \"16 Friends\");\nconst [name, setName] = useState('');\nconst [userName, setUserName] = useState('');\nconst [followers, setFollower] = useState('');\nconst [avatar, setAvatar] = useState('');\nconst [userInput, setUserInput] = useState('');\nconst [error, setError] = useState('');\nconst [repos, setRepos] = useState('');\nuseEffect(() => {\n  fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n    headers: {\n      authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n    }\n  }).then(response => response.json()).then(data => {\n    setData(data);\n  });\n}, []);\nconst setData = {};\n\nconst ProfileCard = () => /*#__PURE__*/React.createElement(Card, {\n  image: Logo,\n  header: \"Elliot Baker\",\n  meta: \"Friend\",\n  description: \"Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.\",\n  extra: extra,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 3\n  }\n});\n\nexport default ProfileCard;","map":{"version":3,"sources":["/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js"],"names":["React","useState","useEffect","Card","Icon","Logo","extra","name","setName","userName","setUserName","followers","setFollower","avatar","setAvatar","userInput","setUserInput","error","setError","repos","setRepos","fetch","headers","authorization","then","response","json","data","setData","ProfileCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAIA,MAAMC,KAAK,gBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,eADF;AAMA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAM,CAACU,SAAD,EAAYC,WAAZ,IAA2BX,QAAQ,CAAC,EAAD,CAAzC;AACA,MAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,MAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC;AAEAC,SAAS,CAAC,MAAM;AACZmB,EAAAA,KAAK,CAAC,8DAAD,EAAiE;AAClEC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE;AADV;AADyD,GAAjE,CAAL,CAKKC,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,IAAI,IAAI;AACVC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GARL;AASH,CAVQ,EAUN,EAVM,CAAT;AAYA,MAAMC,OAAO,GAAI,EAAjB;;AACA,MAAMC,WAAW,GAAG,mBAElB,oBAAC,IAAD;AACE,EAAA,KAAK,EAAExB,IADT;AAEE,EAAA,MAAM,EAAC,cAFT;AAGE,EAAA,IAAI,EAAC,QAHP;AAIE,EAAA,WAAW,EAAC,oGAJd;AAKE,EAAA,KAAK,EAAEC,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF;;AAWA,eAAeuB,WAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Card, Icon,  } from 'semantic-ui-react'\nimport Logo from '../images/elliot.png';\n\n\n\nconst extra = (\n  <a>\n    <Icon name='user' />\n    16 Friends\n  </a>\n)\nconst [name, setName] = useState('');\nconst [userName, setUserName] = useState('');\nconst [followers, setFollower] = useState('');\nconst [avatar, setAvatar] = useState('');\nconst [userInput, setUserInput] = useState('');\nconst [error, setError] = useState('');\nconst [repos, setRepos] = useState('');\n\nuseEffect(() => {\n    fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n        headers: {\n            authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n        }\n    })\n        .then(response => response.json())\n        .then(data => {\n            setData(data)\n        });\n}, []);\n\nconst setData = ({})\nconst ProfileCard = () => (\n\n  <Card\n    image={Logo}\n    header='Elliot Baker'\n    meta='Friend'\n    description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n    extra={extra}\n  />\n)\n\nexport default ProfileCard\n"]},"metadata":{},"sourceType":"module"}