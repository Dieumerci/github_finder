{"ast":null,"code":"var _jsxFileName = \"/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport Logo from '../images/elliot.png';\n\nconst extra = props => /*#__PURE__*/React.createElement(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  name: \"user\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }\n}), props.followers);\n\nfunction ProfileCard(props) {\n  useEffect(() => {\n    fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n      headers: {\n        authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n      }\n    }).then(response => response.json()).then(data => {\n      setData(data);\n    });\n  }, []);\n\n  const setData = ({\n    name,\n    userName,\n    followers,\n    avatar,\n    userInput,\n    error,\n    repos\n  }) => {\n    setName(name);\n    setAvatar(avatar);\n    setFollowers(followers);\n    setUserName(userName);\n    setUserInput(userInput);\n    setRepos(repos);\n    setError(error);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    image: avatar,\n    header: name,\n    meta: \"Friend\",\n    description: \"Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.\",\n    extra: extra(followers),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  });\n}\n\nexport default ProfileCard;","map":{"version":3,"sources":["/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js"],"names":["React","useState","useEffect","Card","Icon","Logo","extra","props","followers","ProfileCard","fetch","headers","authorization","then","response","json","data","setData","name","userName","avatar","userInput","error","repos","setName","setAvatar","setFollowers","setUserName","setUserInput","setRepos","setError"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;AAGA,MAAMC,KAAK,GAAIC,KAAD,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEGA,KAAK,CAACC,SAFT,CADF;;AAQA,SAASC,WAAT,CAAqBF,KAArB,EAA4B;AAExBL,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,KAAK,CAAC,8DAAD,EAAiE;AAClEC,MAAAA,OAAO,EAAE;AACLC,QAAAA,aAAa,EAAE;AADV;AADyD,KAAjE,CAAL,CAKKC,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,IAAI,IAAI;AACVC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACH,KARL;AASH,GAVQ,EAUN,EAVM,CAAT;;AAYA,QAAMC,OAAO,GAAG,CAAC;AACbC,IAAAA,IADa;AAEbC,IAAAA,QAFa;AAGbX,IAAAA,SAHa;AAIbY,IAAAA,MAJa;AAKbC,IAAAA,SALa;AAMbC,IAAAA,KANa;AAObC,IAAAA;AAPa,GAAD,KAQV;AACFC,IAAAA,OAAO,CAACN,IAAD,CAAP;AACAO,IAAAA,SAAS,CAACL,MAAD,CAAT;AACAM,IAAAA,YAAY,CAAClB,SAAD,CAAZ;AACAmB,IAAAA,WAAW,CAACR,QAAD,CAAX;AACAS,IAAAA,YAAY,CAACP,SAAD,CAAZ;AACAQ,IAAAA,QAAQ,CAACN,KAAD,CAAR;AACAO,IAAAA,QAAQ,CAACR,KAAD,CAAR;AACH,GAhBD;;AAoBA,sBACI,oBAAC,IAAD;AACA,IAAA,KAAK,EAAEF,MADP;AAEA,IAAA,MAAM,EAAEF,IAFR;AAGA,IAAA,IAAI,EAAC,QAHL;AAIA,IAAA,WAAW,EAAC,oGAJZ;AAKA,IAAA,KAAK,EAAEZ,KAAK,CAACE,SAAD,CALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AASD;;AAEH,eAAeC,WAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Card, Icon,  } from 'semantic-ui-react'\nimport Logo from '../images/elliot.png';\n\n\nconst extra = (props) => (\n  <a>\n    <Icon name='user' />\n    {props.followers}\n  </a>\n)\n\n\nfunction ProfileCard(props) {\n\n    useEffect(() => {\n        fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n            headers: {\n                authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n            }\n        })\n            .then(response => response.json())\n            .then(data => {\n                setData(data)\n            });\n    }, []);\n    \n    const setData = ({\n        name,\n        userName,\n        followers,\n        avatar,\n        userInput,\n        error,\n        repos,\n    }) => {\n        setName(name);\n        setAvatar(avatar);\n        setFollowers(followers);\n        setUserName(userName);\n        setUserInput(userInput);\n        setRepos(repos);\n        setError(error);\n    };\n    \n\n    \n    return (\n        <Card\n        image={avatar}\n        header={name}\n        meta='Friend'\n        description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n        extra={extra(followers)}\n      />\n    )\n  }\n\nexport default ProfileCard\n"]},"metadata":{},"sourceType":"module"}