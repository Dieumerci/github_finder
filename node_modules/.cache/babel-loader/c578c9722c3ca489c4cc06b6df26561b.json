{"ast":null,"code":"var _jsxFileName = \"/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Card, Icon } from 'semantic-ui-react';\nimport Logo from '../images/elliot.png';\nconst [name, setName] = useState('');\nconst [userName, setUserName] = useState('');\nconst [followers, setFollowers] = useState('');\nconst [avatar, setAvatar] = useState('');\nconst [userInput, setUserInput] = useState('');\nconst [error, setError] = useState('');\nconst [repos, setRepos] = useState('');\n\nconst extra = props => /*#__PURE__*/React.createElement(\"a\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Icon, {\n  name: \"user\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }\n}), props.friends);\n\nuseEffect(() => {\n  fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n    headers: {\n      authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n    }\n  }).then(response => response.json()).then(data => {\n    setData(data);\n  });\n}, []);\n\nconst setData = ({\n  name,\n  userName,\n  followers,\n  avatar,\n  userInput,\n  error,\n  repos\n}) => {\n  setName(name), setAvatar(avatar), setFollowers(followers);\n  setUserName(userName), setUserInput(userInput), setRepos(repos), setError(error);\n};\n\nconst ProfileCard = () => /*#__PURE__*/React.createElement(Card, {\n  image: avatar,\n  header: name,\n  meta: \"Friend\",\n  description: \"Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.\",\n  extra: extra(followers),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 3\n  }\n});\n\nexport default ProfileCard;","map":{"version":3,"sources":["/Users/dieumercikazadi/Desktop/nreality/github_finder/src/components/Profile.js"],"names":["React","useState","useEffect","Card","Icon","Logo","name","setName","userName","setUserName","followers","setFollowers","avatar","setAvatar","userInput","setUserInput","error","setError","repos","setRepos","extra","props","friends","fetch","headers","authorization","then","response","json","data","setData","ProfileCard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,EAAD,CAApC;AACA,MAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,EAAD,CAA1C;AACA,MAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAM,CAACiB,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;;AAGA,MAAMmB,KAAK,GAAIC,KAAD,iBACZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,IAAD;AAAM,EAAA,IAAI,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEGA,KAAK,CAACC,OAFT,CADF;;AAOApB,SAAS,CAAC,MAAM;AACZqB,EAAAA,KAAK,CAAC,8DAAD,EAAiE;AAClEC,IAAAA,OAAO,EAAE;AACLC,MAAAA,aAAa,EAAE;AADV;AADyD,GAAjE,CAAL,CAKKC,IALL,CAKUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EALtB,EAMKF,IANL,CAMUG,IAAI,IAAI;AACVC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACH,GARL;AASH,CAVQ,EAUN,EAVM,CAAT;;AAYA,MAAMC,OAAO,GAAG,CAAC;AACbxB,EAAAA,IADa;AAEbE,EAAAA,QAFa;AAGbE,EAAAA,SAHa;AAIbE,EAAAA,MAJa;AAKbE,EAAAA,SALa;AAMbE,EAAAA,KANa;AAObE,EAAAA;AAPa,CAAD,KAQV;AACFX,EAAAA,OAAO,CAACD,IAAD,CAAP,EACIO,SAAS,CAACD,MAAD,CADb,EAEID,YAAY,CAACD,SAAD,CAFhB;AAGAD,EAAAA,WAAW,CAACD,QAAD,CAAX,EACIO,YAAY,CAACD,SAAD,CADhB,EAEIK,QAAQ,CAACD,KAAD,CAFZ,EAGID,QAAQ,CAACD,KAAD,CAHZ;AAIH,CAhBD;;AAmBA,MAAMe,WAAW,GAAG,mBAElB,oBAAC,IAAD;AACE,EAAA,KAAK,EAAEnB,MADT;AAEE,EAAA,MAAM,EAAEN,IAFV;AAGE,EAAA,IAAI,EAAC,QAHP;AAIE,EAAA,WAAW,EAAC,oGAJd;AAKE,EAAA,KAAK,EAAEc,KAAK,CAACV,SAAD,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAFF;;AAWA,eAAeqB,WAAf","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Card, Icon,  } from 'semantic-ui-react'\nimport Logo from '../images/elliot.png';\n\nconst [name, setName] = useState('');\nconst [userName, setUserName] = useState('');\nconst [followers, setFollowers] = useState('');\nconst [avatar, setAvatar] = useState('');\nconst [userInput, setUserInput] = useState('');\nconst [error, setError] = useState('');\nconst [repos, setRepos] = useState('');\n\n\nconst extra = (props) => (\n  <a>\n    <Icon name='user' />\n    {props.friends}\n  </a>\n)\n\nuseEffect(() => {\n    fetch(\"https://api.github.com/repos/octokit/core.js/releases/latest\", {\n        headers: {\n            authorization: \"token dd68bb632d4ffbbed4b01e1592aa5b3e44e8dcc7\"\n        }\n    })\n        .then(response => response.json())\n        .then(data => {\n            setData(data)\n        });\n}, []);\n\nconst setData = ({\n    name,\n    userName,\n    followers,\n    avatar,\n    userInput,\n    error,\n    repos,\n}) => {\n    setName(name),\n        setAvatar(avatar),\n        setFollowers(followers)\n    setUserName(userName),\n        setUserInput(userInput),\n        setRepos(repos),\n        setError(error)\n};\n\n\nconst ProfileCard = () => (\n\n  <Card\n    image={avatar}\n    header={name}\n    meta='Friend'\n    description='Elliot is a sound engineer living in Nashville who enjoys playing guitar and hanging with his cat.'\n    extra={extra(followers)}\n  />\n)\n\nexport default ProfileCard\n"]},"metadata":{},"sourceType":"module"}